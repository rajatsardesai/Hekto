{"version":3,"file":"static/js/740.60f787b8.chunk.js","mappings":"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","sources":["components/MetaData.jsx","components/Products/ReviewCard.jsx","components/Products/ProductDetailsTab.jsx","components/Products/ProductDetails.jsx","components/Products/ProductsCard.jsx","store/actions/cartAction.js","store/actions/productAction.js"],"sourcesContent":["import React from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nconst MetaData = ({ title }) => {\n    return (\n        <HelmetProvider>\n            <Helmet>\n                <title>{title}</title>\n            </Helmet>\n        </HelmetProvider>\n    )\n}\n\nexport default MetaData\n","import React from 'react';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { MdAccountCircle } from \"react-icons/md\";\r\n\r\nconst ReviewCard = ({ review }) => {\r\n    const options = {\r\n        edit: false,\r\n        color: \"rgb(20,20,20,0.1)\",\r\n        activeColor: \"tomato\",\r\n        size: window.innerWidth < 600 ? 20 : 25,\r\n        value: review.rating,\r\n        isHalf: true\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"reviewCard\">\r\n                <IconContext.Provider value={{ color: \"gray\", size: \"30px\" }}>\r\n                    <div className=\"d-inline-block me-2\">\r\n                        {\r\n                            review.avatar ?\r\n                                <img src={review.avatar} alt={review.name} className=\"rounded-circle\" style={{ width: \"25px\", height: \"25px\" }} />\r\n                                : <MdAccountCircle />\r\n\r\n                        }\r\n                    </div>\r\n                </IconContext.Provider>\r\n                <span className=\"fs-6\">{review.name}</span>\r\n                <ReactStars {...options} />\r\n                <p>{review.comment}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewCard;\r\n","import React, { memo, useState } from 'react';\r\nimport Container from 'react-bootstrap/esm/Container';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ReviewCard from './ReviewCard';\r\nimport { useDispatch } from 'react-redux';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { newReview } from '../../store/actions/productAction';\r\n\r\nconst ProductDetailsTab = memo((props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { tabContainerRef, product, options, id, activeTab, setActiveTab, submitReviewToggle, open, setOpen } = props;\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    const handleTabSelect = (tab) => {\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    const ratingChanged = (newRating) => {\r\n        setRating(newRating);\r\n    };\r\n\r\n    const submitReviewHandler = () => {\r\n        const reviewForm = new FormData();\r\n\r\n        reviewForm.set(\"rating\", rating);\r\n        reviewForm.set(\"comment\", comment);\r\n        reviewForm.set(\"productId\", id);\r\n\r\n        dispatch(newReview(reviewForm));\r\n        setRating(0);\r\n        setComment(\"\");\r\n        setOpen(\"d-none\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Stack ref={tabContainerRef} className=\"product-details-info bg-gray-200-color my-5\">\r\n                <Container className=\"py-5\">\r\n                    <Tab.Container activeKey={activeTab} onSelect={handleTabSelect}>\r\n                        <Nav variant=\"tabs\" className=\"home-products-tab justify-content-center justify-content-md-start flex-column flex-md-row border-0 mb-4\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"tab1\" className=\"border-0 font-lato text-center my-2 mx-0 mx-md-3 bg-transparent\">Description</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"tab2\" className=\"border-0 font-lato text-center my-2 mx-0 mx-md-3 bg-transparent\">Reviews</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey={\"tab1\"} className=\"overflow-auto\">\r\n                                <p style={{ whiteSpace: \"pre-line\" }}>{product.description}</p>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey={\"tab2\"} className=\"overflow-auto\">\r\n                                <Stack className={`mb-5 ${open}`}>\r\n                                    <h4>Create Review</h4>\r\n                                    <h5 className=\"mt-3\">Overall rating</h5>\r\n                                    <ReactStars {...options} value={rating} onChange={ratingChanged} edit={true} />\r\n                                    <h5 className=\"mt-3\">Add a written review</h5>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        cols={30}\r\n                                        rows={5}\r\n                                        value={comment}\r\n                                        onChange={(e) => setComment(e.target.value)}\r\n                                    />\r\n                                    <Stack className=\"flex-column flex-md-row my-3\">\r\n                                        <Button className=\"my-2 my-md-0 me-md-2 bg-secondary-color border-0 rounded-0\" onClick={submitReviewHandler}>Submit</Button>\r\n                                        <Button className=\"my-2 my-md-0 bg-secondary-color border-0 rounded-0\" onClick={submitReviewToggle}>Cancel</Button>\r\n                                    </Stack>\r\n                                </Stack>\r\n\r\n                                {\r\n                                    product.reviews && product.reviews[0] ?\r\n                                        <Stack className=\"reviews\">\r\n                                            {\r\n                                                product.reviews &&\r\n                                                product.reviews.map((review, index) => <ReviewCard key={index} review={review} />)\r\n                                            }\r\n                                        </Stack> :\r\n                                        <span className=\"fw-bold\">No reviews</span>\r\n                                }\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Tab.Container>\r\n                </Container>\r\n            </Stack>\r\n        </>\r\n    )\r\n});\r\n\r\nexport default ProductDetailsTab;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport \"./ProductDetails.css\"\r\nimport InitLoader from \"../Utils/InitLoader\";\r\nimport MetaData from '../MetaData';\r\nimport HeaderLoading from '../Header/HeaderLoading';\r\nimport HeaderAlert from '../Header/HeaderAlert';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Col from 'react-bootstrap/esm/Col';\r\nimport Container from 'react-bootstrap/esm/Container';\r\nimport Row from 'react-bootstrap/esm/Row';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getAllProducts, getProductDetails } from '../../store/actions/productAction';\r\nimport { addToCart } from '../../store/actions/cartAction';\r\nimport ProductsCard from './ProductsCard';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { NEW_REVIEW_RESET } from '../../store/constants/productConstants';\r\nimport ProductDetailsTab from './ProductDetailsTab';\r\n\r\nconst ProductDetails = () => {\r\n    const { name, id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const tabContainerRef = useRef(null);\r\n\r\n    const [activeTab, setActiveTab] = useState('tab1');\r\n    const [selectedStockValue, setSelectedStockValue] = useState(1);\r\n    const [open, setOpen] = useState(\"d-none\");\r\n\r\n    const { products, error: productsError, message } = useSelector(\r\n        (state) => state.products\r\n    );\r\n\r\n    const { headerLoading } = useSelector(\r\n        (state) => state.cart\r\n    );\r\n\r\n    const { product, loading: productDetailsLoading, headerLoading: productDetailsHeaderLoading, error: productDetailsError } = useSelector(\r\n        (state) => state.productDetails\r\n    );\r\n\r\n    const { success, error: newReviewError } = useSelector(\r\n        (state) => state.newReview\r\n    );\r\n\r\n    // For product stock\r\n    const productStock = Array.from({ length: product.stock }, (_, index) => index + 1);\r\n\r\n    const handleStockSelect = (eventKey) => {\r\n        setSelectedStockValue(eventKey);\r\n    };\r\n\r\n    const addProductToCart = () => {\r\n        dispatch(addToCart(name, id, selectedStockValue));\r\n    };\r\n\r\n    // For review submit\r\n    const submitReviewToggle = () => {\r\n        open === \"d-none\" ? setOpen(\"d-block\") : setOpen(\"d-none\");\r\n        setActiveTab('tab2');\r\n        if (tabContainerRef.current) {\r\n            tabContainerRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        };\r\n    };\r\n\r\n    const options = {\r\n        color: \"rgb(20,20,20,0.1)\",\r\n        activeColor: \"tomato\",\r\n        size: window.innerWidth < 600 ? 20 : 25,\r\n        isHalf: true\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(name, id));\r\n        dispatch(getAllProducts());\r\n        if (success) {\r\n            dispatch({ type: NEW_REVIEW_RESET });\r\n        }\r\n    }, [dispatch, id, name, success]);\r\n\r\n    // Scroll to top\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    return (\r\n        productDetailsLoading ?\r\n            <InitLoader />\r\n            :\r\n            <>\r\n                {/* Title tag */}\r\n                <MetaData title={`${product.name} -@Hekto`} />\r\n\r\n                {/* React top loading bar */}\r\n                <HeaderLoading progressLoading={productDetailsHeaderLoading || headerLoading} />\r\n\r\n                {/* Header alert */}\r\n                {\r\n                    (productsError || productDetailsError || newReviewError) &&\r\n                    <HeaderAlert error={productsError || productDetailsError || newReviewError} message={message} />\r\n                }\r\n\r\n                {/* Product Details */}\r\n                <Container className=\"py-md-5 product-detail-page\">\r\n                    <Row className=\"align-items-center card-shadow p-3\">\r\n                        <Col sm={12} lg={6}>\r\n                            <Carousel className=\"product-details-carousel mb-5 mb-lg-0\">\r\n                                {\r\n                                    product.images && product.images.map((productImage, index) => {\r\n                                        return (\r\n                                            <Carousel.Item key={index}>\r\n                                                <img\r\n                                                    className=\"d-block w-100\"\r\n                                                    src={productImage.url}\r\n                                                    alt=\"First slide\"\r\n                                                />\r\n                                            </Carousel.Item>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Carousel>\r\n                        </Col>\r\n                        <Col sm={12} lg={6}>\r\n                            <h2 className=\"font-35 text-primary-color fw-semibold mb-1 text-overflow\">{product.name}</h2>\r\n                            <Stack direction=\"horizontal\" gap={1}>\r\n                                <ReactStars {...options} value={product.ratings} edit={false} />\r\n                                <span className=\"text-primary-color\">({product.numberOfReviews})</span>\r\n                            </Stack>\r\n                            <span className=\"font-26 text-primary-color\">₹{product.price}</span>\r\n                            <p className=\"mt-2 text-gray-100-color font-16 fw-semibold text-overflow\">{product.description}</p>\r\n                            {\r\n                                product.stock < 1 ?\r\n                                    <span className=\"d-block font-26 text-danger\">Out of stock</span> :\r\n                                    <>\r\n                                        <Stack direction=\"horizontal\" gap={3} className=\"my-2\">\r\n                                            <label htmlFor=\"quantity-dropdown\" className=\"text-primary-color\">\r\n                                                Quantity:\r\n                                            </label>\r\n                                            <Dropdown onSelect={handleStockSelect}>\r\n                                                <Dropdown.Toggle className=\"border\" variant=\"transparent\" id=\"quantity-dropdown\">\r\n                                                    {selectedStockValue && selectedStockValue}\r\n                                                </Dropdown.Toggle>\r\n\r\n                                                <Dropdown.Menu className=\"product-details-dropdown\">\r\n                                                    {\r\n                                                        productStock.map((stock, index) => {\r\n                                                            return (\r\n                                                                <Dropdown.Item key={index} eventKey={stock}>{stock}</Dropdown.Item>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </Stack>\r\n                                        <Stack className=\"flex-column flex-md-row\">\r\n                                            <Button disabled={(product.stock < 1 || product.price === 0) ? true : false} className=\"my-2 me-md-2 bg-secondary-color border-0 rounded-0\" onClick={addProductToCart}>Add to Cart</Button>\r\n                                            <Button className=\"my-2 bg-secondary-color border-0 rounded-0\" onClick={submitReviewToggle}>Write a review</Button>\r\n                                        </Stack>\r\n                                    </>\r\n                            }\r\n                            <Stack direction=\"horizontal\" gap={1} className=\"mt-3\">\r\n                                <span className=\"text-primary-color fw-semibold\">Categories:</span>\r\n                                <span className=\"font-16 text-primary-color\">{product.category}</span>\r\n                            </Stack>\r\n                            <Stack direction=\"horizontal\" gap={1} className=\"mt-3\">\r\n                                <span className=\"text-primary-color fw-semibold\">Share:</span>\r\n                                <Stack direction=\"horizontal\" className=\"justify-content-center\">\r\n                                    <Link to=\"https://www.facebook.com\" target=\"_blank\">\r\n                                        <img src={process.env.PUBLIC_URL + \"/assets/style/fb-icon.svg\"} alt=\"fb-icon\" className=\"me-2\" />\r\n                                    </Link>\r\n                                    <Link to=\"https://www.instagram.com\" target=\"_blank\">\r\n                                        <img src={process.env.PUBLIC_URL + \"/assets/style/insta-icon.svg\"} alt=\"insta-icon\" className=\"me-2\" />\r\n                                    </Link>\r\n                                    <Link to=\"https://www.twitter.com\" target=\"_blank\">\r\n                                        <img src={process.env.PUBLIC_URL + \"/assets/style/tweet-icon.svg\"} alt=\"tweet-icon\" />\r\n                                    </Link>\r\n                                </Stack>\r\n                            </Stack>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <ProductDetailsTab tabContainerRef={tabContainerRef} product={product} options={options} id={id} activeTab={activeTab} setActiveTab={setActiveTab} submitReviewToggle={submitReviewToggle} open={open} setOpen={setOpen} />\r\n\r\n                <Container>\r\n                    <h4 className=\"font-26 text-primary-color fw-bold mb-4\">Related Products</h4>\r\n                    <Row xs={1} md={2} xl={3} className=\"g-4\">\r\n                        {\r\n                            products && products.map((item) =>\r\n                                (item.category === product.category) && (item._id !== id) &&\r\n                                <ProductsCard key={item._id} product={item} />\r\n                            )\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default ProductDetails;","import React from 'react';\r\nimport \"./ProductsCard.css\"\r\nimport { Link } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Stack from 'react-bootstrap/Stack';\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nconst ProductsCard = ({ product }) => {\r\n\r\n    const productName = product.name.replace(/ /g, \"-\");\r\n\r\n    const options = {\r\n        edit: false,\r\n        color: \"rgb(20,20,20,0.1)\",\r\n        activeColor: \"tomato\",\r\n        size: window.innerWidth < 600 ? 20 : 25,\r\n        value: product.ratings,\r\n        isHalf: true\r\n    };\r\n\r\n    return (\r\n        <Link className=\"product-cards text-decoration-none\" to={`/product/${productName}/${product._id}`}>\r\n            <Col>\r\n                <Card className=\"cards border-0\">\r\n                    <Card.Img variant=\"top\" src={product.images[0].url} alt={product.name} className=\"card-image m-auto object-fit-cover\" />\r\n                    <Card.Body className=\"text-dark\">\r\n                        <Card.Title className=\"text-overflow fw-bold font-18 text-primary-color text-center\">{product.name}</Card.Title>\r\n                        <Stack className=\"align-items-center\">\r\n                            <ReactStars {...options} />\r\n                            <span className=\"text-primary\">{product.numberOfReviews} Reviews</span>\r\n                        </Stack>\r\n                        <Card.Text className=\"text-center font-20 text-secondary-color\">\r\n                            ₹{product.price}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ProductsCard\r\n","import { ADD_TO_CART, REMOVE_FROM_CART, SAVE_SHIPPING_INFO } from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\nimport { SET_LOADER_PROGRESS } from \"../constants/cartConstants\";\r\n\r\n// add to Cart\r\nexport const addToCart = (name, id, quantity) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: SET_LOADER_PROGRESS,\r\n        headerLoading: 0\r\n    });\r\n\r\n    const { data } = await axios.get(\r\n        `/api/v1/product/${name}/${id}`\r\n    );\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            price: data.product.price,\r\n            image: data.product.images[0].url,\r\n            stock: data.product.stock,\r\n            quantity\r\n        }\r\n    });\r\n\r\n    dispatch({\r\n        type: SET_LOADER_PROGRESS,\r\n        headerLoading: 50\r\n    });\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n\r\n    dispatch({\r\n        type: SET_LOADER_PROGRESS,\r\n        headerLoading: 100\r\n    });\r\n};\r\n\r\n// Remove from cart\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n// Save shipping info\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\r\n};","import axios from \"axios\";\r\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, FILTERED_PRODUCTS_REQUEST, FILTERED_PRODUCTS_SUCCESS, FILTERED_PRODUCTS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, SET_LOADER_PROGRESS, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, ADMIN_PRODUCT_REQUEST, ADMIN_PRODUCT_SUCCESS, ADMIN_PRODUCT_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, ALL_REVIEW_REQUEST, ALL_REVIEW_SUCCESS, ALL_REVIEW_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL } from \"../constants/productConstants\";\r\n\r\n// Get all products\r\nexport const getAllProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/v1/allproducts`);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n};\r\n\r\n// Get filtered products\r\nexport const getFilteredProducts = (keyword = \"\", currentPage = 1, price = 50000, category, ratings = 0) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: FILTERED_PRODUCTS_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        let link;\r\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price}&ratings[gte]=${ratings}`;\r\n\r\n        if (category) {\r\n            link = `/api/v1/products?category=${category}&keyword=${keyword}&page=${currentPage}&price[lte]=${price}&ratings[gte]=${ratings}`;\r\n        }\r\n        const { data } = await axios.get(link);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: FILTERED_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FILTERED_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n};\r\n\r\n// Get products (Admin)\r\nexport const getAdminProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ADMIN_PRODUCT_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_SUCCESS,\r\n            payload: data.products\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_PRODUCT_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n};\r\n\r\n// Get product details\r\nexport const getProductDetails = (name = \"\", id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n        const { data } = await axios.get(`/api/v1/product/${name}/${id}`);\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n};\r\n\r\n// Create new review\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEW_REVIEW_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n};\r\n\r\n// Get all reviews (Admin)\r\nexport const getAllReviews = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_REVIEW_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: ALL_REVIEW_SUCCESS,\r\n            payload: data.reviews\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_REVIEW_FAIL,\r\n            payload: \"Please check product ID\"\r\n        })\r\n    }\r\n};\r\n\r\n// Delete reviews (Admin)\r\nexport const deleteReviews = (reviewId, productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_REVIEW_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${reviewId}&productId=${productId}`);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n};\r\n\r\n// Create new product (Admin)\r\nexport const createProduct = (productData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEW_PRODUCT_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n};\r\n\r\n// Delete product (Admin)\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n};\r\n\r\n// Update product\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 0\r\n        });\r\n\r\n        const config = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\r\n\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 50\r\n        });\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER_PROGRESS,\r\n            headerLoading: 100\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n};"],"names":["_ref","title","_jsx","HelmetProvider","children","Helmet","review","options","edit","color","activeColor","size","window","innerWidth","value","rating","isHalf","_Fragment","_jsxs","className","IconContext","avatar","src","alt","name","style","width","height","MdAccountCircle","ReactStars","_objectSpread","comment","memo","props","dispatch","useDispatch","tabContainerRef","product","id","activeTab","setActiveTab","submitReviewToggle","open","setOpen","_useState","useState","_useState2","_slicedToArray","setRating","_useState3","_useState4","setComment","Stack","ref","Container","Tab","activeKey","onSelect","tab","Nav","variant","eventKey","whiteSpace","description","concat","onChange","newRating","Form","as","cols","rows","e","target","Button","onClick","reviewForm","FormData","set","newReview","reviews","map","index","ReviewCard","_useParams","useParams","useRef","selectedStockValue","setSelectedStockValue","_useState5","_useState6","_useSelector","useSelector","state","products","productsError","error","message","headerLoading","cart","_useSelector3","productDetails","productDetailsLoading","loading","productDetailsHeaderLoading","productDetailsError","_useSelector4","success","newReviewError","productStock","Array","from","length","stock","_","current","scrollIntoView","behavior","useEffect","getProductDetails","getAllProducts","type","NEW_REVIEW_RESET","scrollTo","InitLoader","MetaData","HeaderLoading","progressLoading","HeaderAlert","Row","Col","sm","lg","Carousel","images","productImage","url","direction","gap","ratings","numberOfReviews","price","htmlFor","Dropdown","disabled","addToCart","category","Link","to","ProductDetailsTab","xs","md","xl","item","_id","ProductsCard","productName","replace","Card","quantity","_asyncToGenerator","_regeneratorRuntime","mark","_callee","getState","_yield$axios$get","data","wrap","_context","prev","next","SET_LOADER_PROGRESS","axios","sent","ADD_TO_CART","payload","image","localStorage","setItem","JSON","stringify","cartItems","stop","_x","_x2","apply","arguments","removeFromCart","_ref2","_callee2","_context2","REMOVE_FROM_CART","_x3","_x4","saveShippingInfo","_ref3","_callee3","_context3","SAVE_SHIPPING_INFO","_x5","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","t0","ALL_PRODUCTS_FAIL","response","getFilteredProducts","keyword","undefined","currentPage","link","_yield$axios$get2","FILTERED_PRODUCTS_REQUEST","FILTERED_PRODUCTS_SUCCESS","FILTERED_PRODUCTS_FAIL","getAdminProduct","_yield$axios$get3","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","ADMIN_PRODUCT_FAIL","_ref4","_callee4","_yield$axios$get4","_context4","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","reviewData","_ref5","_callee5","config","_yield$axios$put","_context5","NEW_REVIEW_REQUEST","headers","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","getAllReviews","_ref6","_callee6","_yield$axios$get5","_context6","ALL_REVIEW_REQUEST","ALL_REVIEW_SUCCESS","ALL_REVIEW_FAIL","_x6","deleteReviews","reviewId","productId","_ref7","_callee7","_yield$axios$delete","_context7","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","_x7","createProduct","productData","_ref8","_callee8","_yield$axios$post","_context8","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","_x8","deleteProduct","_ref9","_callee9","_yield$axios$delete2","_context9","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","_x9","updateProduct","_ref10","_callee10","_yield$axios$put2","_context10","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","_x10"],"sourceRoot":""}