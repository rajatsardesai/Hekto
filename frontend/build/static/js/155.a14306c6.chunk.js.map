{"version":3,"file":"static/js/155.a14306c6.chunk.js","mappings":"+JA8BA,UAzBuB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QAChBC,GAAWC,EAAAA,EAAAA,MACjBC,GAA2CC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAApEC,EAAeJ,EAAfI,gBAAiBC,EAAOL,EAAPK,QAASF,EAAIH,EAAJG,KAWlC,OATAG,EAAAA,EAAAA,YAAU,WACN,IAAKD,GAAWD,IACPP,IAAYM,EACb,OAAOI,EAAAA,EAAAA,KAACC,EAAAA,EAAS,GAG7B,GAAG,CAACX,EAASQ,EAASP,EAAUM,EAAiBD,MAG7CN,GAAaM,GAAsB,UAAdA,EAAKM,QAKzBZ,GAAYO,IAIVG,EAAAA,EAAAA,KAACG,EAAAA,GAAM,KARHH,EAAAA,EAAAA,KAACC,EAAAA,EAAS,GASzB,C","sources":["components/Route/ProtectedRoute.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport Forbidden from '../Utils/Forbidden';\n\nconst ProtectedRoute = ({ isAdmin }) => {\n    const navigate = useNavigate();\n    const { isAuthenticated, loading, user } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (!loading && isAuthenticated) {\n            if (!isAdmin && !user) {\n                return <Forbidden />;\n            }\n        }\n    }, [isAdmin, loading, navigate, isAuthenticated, user]);\n\n    // When user role is user\n    if (isAdmin && (!user || user.role !== 'admin')) {\n        return <Forbidden />;\n    }\n\n    // When user is guest\n    if (!isAdmin && !isAuthenticated) {\n        return <Forbidden />;\n    }\n\n    return <Outlet />;\n}\n\nexport default ProtectedRoute;\n"],"names":["_ref","isAdmin","navigate","useNavigate","_useSelector","useSelector","state","user","isAuthenticated","loading","useEffect","_jsx","Forbidden","role","Outlet"],"sourceRoot":""}