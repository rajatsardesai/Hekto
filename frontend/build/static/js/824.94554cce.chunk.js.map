{"version":3,"file":"static/js/824.94554cce.chunk.js","mappings":"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","sources":["components/Admin/Sidebar.jsx","components/Admin/UsersList.jsx","components/MetaData.jsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { memo } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Link } from 'react-router-dom';\n\nconst Sidebar = () => {\n    return (\n        <>\n            <ListGroup>\n                <ListGroup.Item as={Link} to={\"/admin/dashboard\"} className=\"bg-gray-300-color border-0 p-3 font-18\">Dashboard</ListGroup.Item>\n                <ListGroup.Item as={Link} to={\"/admin/products\"} className=\"bg-gray-300-color border-top border-end-0 border-bottom-0 border-start-0 p-3 font-18\">Products</ListGroup.Item>\n                <ListGroup.Item as={Link} to={\"/admin/orders\"} className=\"bg-gray-300-color border-top border-end-0 border-bottom-0 border-start-0 p-3 font-18\">Orders</ListGroup.Item>\n                <ListGroup.Item as={Link} to={\"/admin/users\"} className=\"bg-gray-300-color border-top border-end-0 border-bottom-0 border-start-0 p-3 font-18\">Users</ListGroup.Item>\n                <ListGroup.Item as={Link} to={\"/admin/reviews\"} className=\"bg-gray-300-color border-top border-end-0 border-bottom-0 border-start-0 p-3 font-18\">Reviews</ListGroup.Item>\n            </ListGroup>\n        </>\n    )\n}\n\nexport default memo(Sidebar);\n","import React, { useEffect } from 'react';\nimport MetaData from '../MetaData';\nimport HeaderLoading from '../Header/HeaderLoading';\nimport HeaderAlert from '../Header/HeaderAlert';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/esm/Container';\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/esm/Stack';\nimport { deleteUser, getAllUsers } from '../../store/actions/userAction';\nimport { DELETE_USER_RESET } from '../../store/constants/userConstants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\n\nconst UsersList = () => {\n    const dispatch = useDispatch();\n\n    const { headerLoading: allUsersHeaderLoading, error: allUsersError, message: allUsersMessage, users } = useSelector((state => state.allUsers));\n    const { headerLoading: deleteHeaderLoading, error: deleteError, message: deleteMessage, isDeleted } = useSelector((state => state.profile));\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id));\n    };\n\n    useEffect(() => {\n        if (isDeleted) {\n            setTimeout(() => {\n                dispatch({ type: DELETE_USER_RESET });\n            }, 5000);\n        };\n\n        dispatch(getAllUsers());\n    }, [dispatch, isDeleted, deleteError]);\n\n    return (\n        <>\n            {/* Title tag */}\n            <MetaData title={\"All Users - Admin\"} />\n\n            {/* React top loading bar */}\n            <HeaderLoading progressLoading={allUsersHeaderLoading || deleteHeaderLoading} />\n\n            {/* Header alert */}\n            {\n                (allUsersError || deleteError || isDeleted) &&\n                <HeaderAlert error={allUsersError || deleteError} message={allUsersMessage || deleteMessage} />\n            }\n\n            {/* All products list */}\n            <Container className=\"my-5 h-60vh\">\n                <Row>\n                    <h5 className=\"fw-bold font-22 text-blue-500-color mb-4\">Admin Dashboard</h5>\n                    <Col lg={4} className=\"mb-5 pe-md-5\">\n                        <Sidebar />\n                    </Col>\n\n                    {/* Dashboard */}\n                    <Col lg={8}>\n                        {\n                            users.length > 0 ?\n                                <Table bordered hover responsive>\n                                    <thead className=\"bg-gray-400-color\">\n                                        <tr>\n                                            <th>User Id</th>\n                                            <th>Name</th>\n                                            <th>Email</th>\n                                            <th>Role</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            users &&\n                                            users.map(user => {\n                                                return (\n                                                    <tr key={user._id}>\n                                                        <td>{user._id}</td>\n                                                        <td className=\"text-overflow line-clamp-1 pb-0\">{user.name}</td>\n                                                        <td>{user.email}</td>\n                                                        <td>{user.role}</td>\n                                                        <td className=\"d-flex\">\n                                                            <Button as={Link} to={`/admin/user/${user._id}`} className=\"bg-secondary-color border-0 py-2 px-3 rounded-0 text-nowrap me-2 w-auto d-flex justify-content-center align-items-center\">Edit</Button>\n                                                            <Button onClick={() => deleteUserHandler(user._id)} className=\"bg-secondary-color border-0 py-2 px-3 rounded-0 text-nowrap\">Delete</Button>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </Table>\n                                :\n                                <Stack >\n                                    <span className=\"text-center text-dark font-20\">No users to show</span>\n                                </Stack>\n                        }\n                    </Col>\n                </Row>\n            </Container >\n        </>\n    )\n}\n\nexport default UsersList;\n","import React from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nconst MetaData = ({ title }) => {\n    return (\n        <HelmetProvider>\n            <Helmet>\n                <title>{title}</title>\n            </Helmet>\n        </HelmetProvider>\n    )\n}\n\nexport default MetaData\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["Sidebar","_jsx","_Fragment","children","_jsxs","ListGroup","as","Link","to","className","memo","dispatch","useDispatch","_useSelector","useSelector","state","allUsers","allUsersHeaderLoading","headerLoading","allUsersError","error","allUsersMessage","message","users","_useSelector2","profile","deleteHeaderLoading","deleteError","deleteMessage","isDeleted","useEffect","setTimeout","type","DELETE_USER_RESET","getAllUsers","MetaData","title","HeaderLoading","progressLoading","HeaderAlert","Container","Row","Col","lg","length","Table","bordered","hover","responsive","map","user","_id","name","email","role","Button","concat","onClick","id","deleteUser","Stack","_ref","HelmetProvider","Helmet","React","ref","bsPrefix","striped","borderless","size","variant","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_objectSpread","responsiveClass"],"sourceRoot":""}